import { type Client } from "@connectrpc/connect";
import { Effect as E } from "effect";
import type { UnknownException } from "effect/Cause";
import { z } from "zod";
import type { SignedReceipt } from "#/gen-proto/nillion/payments/v1/receipt_pb";
import { type OverwritePermissionsRequest } from "#/gen-proto/nillion/permissions/v1/overwrite_pb";
import { Permissions as PermissionsService } from "#/gen-proto/nillion/permissions/v1/service_pb";
import { type PartyId, Uuid } from "#/types/types";
import type { ValuesPermissions } from "#/types/values-permissions";
import type { VmClient } from "#/vm/client";
import type { Operation } from "#/vm/operation/operation";
export declare const OverwritePermissionsConfig: z.ZodObject<{
    vm: z.ZodType<VmClient, z.ZodTypeDef, VmClient>;
    id: z.ZodString;
    permissions: z.ZodType<ValuesPermissions, z.ZodTypeDef, ValuesPermissions>;
}, "strip", z.ZodTypeAny, {
    id: string;
    permissions: ValuesPermissions;
    vm: VmClient;
}, {
    id: string;
    permissions: ValuesPermissions;
    vm: VmClient;
}>;
export type OverwritePermissionsConfig = z.infer<typeof OverwritePermissionsConfig>;
type NodeRequestOptions = {
    nodeId: PartyId;
    client: Client<typeof PermissionsService>;
    request: OverwritePermissionsRequest;
};
export declare class OverwritePermissions implements Operation<ValuesPermissions> {
    private readonly config;
    private constructor();
    invoke(): Promise<ValuesPermissions>;
    prepareRequestPerNode(signedReceipt: SignedReceipt): E.Effect<NodeRequestOptions, UnknownException>[];
    invokeNodeRequest(options: NodeRequestOptions): E.Effect<ValuesPermissions, UnknownException>;
    private pay;
    static new(config: OverwritePermissionsConfig): OverwritePermissions;
}
export declare class OverwritePermissionsBuilder {
    private readonly vm;
    private _id?;
    private _permissions?;
    private constructor();
    id(value: Uuid): this;
    permissions(value: ValuesPermissions): this;
    build(): OverwritePermissions;
    static init: (vm: VmClient) => OverwritePermissionsBuilder;
}
export {};
