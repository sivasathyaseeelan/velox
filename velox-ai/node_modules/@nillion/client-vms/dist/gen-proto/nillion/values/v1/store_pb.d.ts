import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { SignedReceipt } from "../../payments/v1/receipt_pb";
import type { Permissions } from "../../permissions/v1/permissions_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/values/v1/store.proto.
 */
export declare const file_nillion_values_v1_store: GenFile;
/**
 * A request to store a set of values.
 *
 * @generated from message nillion.values.v1.store.StoreValuesRequest
 */
export type StoreValuesRequest = Message<"nillion.values.v1.store.StoreValuesRequest"> & {
    /**
     * The receipt that proves this operation was paid for.
     *
     * The receipt must be for a `StoreValues` operation.
     *
     * @generated from field: nillion.payments.v1.receipt.SignedReceipt signed_receipt = 1;
     */
    signedReceipt?: SignedReceipt;
    /**
     * The values encoded in bincode format.
     *
     * @generated from field: bytes bincode_values = 2;
     */
    bincodeValues: Uint8Array;
    /**
     * The permissions to set for these values.
     *
     * Permissions are required when storing values and optional when updating them. That is,
     * if `update_identifier` is set then this attribute is optional.
     *
     * @generated from field: nillion.permissions.v1.permissions.Permissions permissions = 3;
     */
    permissions?: Permissions;
    /**
     * The optional values identifier to use when storing these values.
     *
     * The given identifier must be a valid values identifier that the invoking user has update permissions
     * on for this operation to be considered valid.
     *
     * Setting this identifier will effectively turn this operation into an update for an existing set of
     * values.
     *
     * @generated from field: bytes update_identifier = 4;
     */
    updateIdentifier: Uint8Array;
};
/**
 * Describes the message nillion.values.v1.store.StoreValuesRequest.
 * Use `create(StoreValuesRequestSchema)` to create a new message.
 */
export declare const StoreValuesRequestSchema: GenMessage<StoreValuesRequest>;
/**
 * A response to a request to store values the network.
 *
 * @generated from message nillion.values.v1.store.StoreValuesResponse
 */
export type StoreValuesResponse = Message<"nillion.values.v1.store.StoreValuesResponse"> & {
    /**
     * The identifier of the store values.
     *
     * @generated from field: bytes values_id = 1;
     */
    valuesId: Uint8Array;
};
/**
 * Describes the message nillion.values.v1.store.StoreValuesResponse.
 * Use `create(StoreValuesResponseSchema)` to create a new message.
 */
export declare const StoreValuesResponseSchema: GenMessage<StoreValuesResponse>;
