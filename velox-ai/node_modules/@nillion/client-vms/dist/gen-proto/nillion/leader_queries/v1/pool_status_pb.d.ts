import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { PreprocessingElement } from "../../preprocessing/v1/element_pb";
import type { SignedReceipt } from "../../payments/v1/receipt_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/leader_queries/v1/pool_status.proto.
 */
export declare const file_nillion_leader_queries_v1_pool_status: GenFile;
/**
 * A request to get the preprocessing pool status.
 *
 * @generated from message nillion.leader_queries.v1.pool_status.PoolStatusRequest
 */
export type PoolStatusRequest = Message<"nillion.leader_queries.v1.pool_status.PoolStatusRequest"> & {
    /**
     * The receipt that proves this operation was paid for.
     *
     * The receipt must be for a `PoolStatus` operation.
     *
     * @generated from field: nillion.payments.v1.receipt.SignedReceipt signed_receipt = 1;
     */
    signedReceipt?: SignedReceipt;
};
/**
 * Describes the message nillion.leader_queries.v1.pool_status.PoolStatusRequest.
 * Use `create(PoolStatusRequestSchema)` to create a new message.
 */
export declare const PoolStatusRequestSchema: GenMessage<PoolStatusRequest>;
/**
 * A response for the request to get the status of the preprocessing pool.
 *
 * @generated from message nillion.leader_queries.v1.pool_status.PoolStatusResponse
 */
export type PoolStatusResponse = Message<"nillion.leader_queries.v1.pool_status.PoolStatusResponse"> & {
    /**
     * The offset ranges for each preprocessing element.
     *
     * @generated from field: repeated nillion.leader_queries.v1.pool_status.PreprocessingOffsets offsets = 1;
     */
    offsets: PreprocessingOffsets[];
    /**
     * Whether preprocessing is active (at least one element type is being generated).
     *
     * @generated from field: bool preprocessing_active = 2;
     */
    preprocessingActive: boolean;
};
/**
 * Describes the message nillion.leader_queries.v1.pool_status.PoolStatusResponse.
 * Use `create(PoolStatusResponseSchema)` to create a new message.
 */
export declare const PoolStatusResponseSchema: GenMessage<PoolStatusResponse>;
/**
 * The offsets for a preprocessing element.
 *
 * This is closed-open set, e.g. [start, end)
 *
 * @generated from message nillion.leader_queries.v1.pool_status.PreprocessingOffsets
 */
export type PreprocessingOffsets = Message<"nillion.leader_queries.v1.pool_status.PreprocessingOffsets"> & {
    /**
     * The preprocessing element.
     *
     * @generated from field: nillion.preprocessing.v1.element.PreprocessingElement element = 1;
     */
    element: PreprocessingElement;
    /**
     * The first offset in the range.
     *
     * @generated from field: uint64 start = 2;
     */
    start: bigint;
    /**
     * The one-past-the-end offset in this range.
     *
     * @generated from field: uint64 end = 3;
     */
    end: bigint;
};
/**
 * Describes the message nillion.leader_queries.v1.pool_status.PreprocessingOffsets.
 * Use `create(PreprocessingOffsetsSchema)` to create a new message.
 */
export declare const PreprocessingOffsetsSchema: GenMessage<PreprocessingOffsets>;
