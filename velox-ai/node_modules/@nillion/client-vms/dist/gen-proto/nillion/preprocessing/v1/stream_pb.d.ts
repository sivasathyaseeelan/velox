import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { PreprocessingElement } from "./element_pb";
import type { AuxiliaryMaterial } from "./material_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/preprocessing/v1/stream.proto.
 */
export declare const file_nillion_preprocessing_v1_stream: GenFile;
/**
 * A message sent between nodes during the execution of a preprocessing protocol.
 *
 * @generated from message nillion.preprocessing.v1.stream.PreprocessingStreamMessage
 */
export type PreprocessingStreamMessage = Message<"nillion.preprocessing.v1.stream.PreprocessingStreamMessage"> & {
    /**
     * An identifier for the instance of the generation being ran.
     *
     * Only the first ever message on the stream requires having this attribute set. Any subsequent message will
     * have this field ignored.
     *
     * @generated from field: bytes generation_id = 1;
     */
    generationId: Uint8Array;
    /**
     * The element being generated.
     *
     * Only the first ever message on the stream requires having this attribute set. Any subsequent message will
     * have this field ignored.
     *
     * @generated from field: nillion.preprocessing.v1.element.PreprocessingElement element = 2;
     */
    element: PreprocessingElement;
    /**
     * The preprocessing message in bincode format.
     *
     * @generated from field: bytes bincode_message = 3;
     */
    bincodeMessage: Uint8Array;
};
/**
 * Describes the message nillion.preprocessing.v1.stream.PreprocessingStreamMessage.
 * Use `create(PreprocessingStreamMessageSchema)` to create a new message.
 */
export declare const PreprocessingStreamMessageSchema: GenMessage<PreprocessingStreamMessage>;
/**
 * A message sent between nodes during the execution of a material generation protocol.
 *
 * @generated from message nillion.preprocessing.v1.stream.AuxiliaryMaterialStreamMessage
 */
export type AuxiliaryMaterialStreamMessage = Message<"nillion.preprocessing.v1.stream.AuxiliaryMaterialStreamMessage"> & {
    /**
     * An identifier for the instance of the generation being ran.
     *
     * Only the first ever message on the stream requires having this attribute set. Any subsequent message will
     * have this field ignored.
     *
     * @generated from field: bytes generation_id = 1;
     */
    generationId: Uint8Array;
    /**
     * The auxiliary material being generated.
     *
     * Only the first ever message on the stream requires having this attribute set. Any subsequent message will
     * have this field ignored.
     *
     * @generated from field: nillion.preprocessing.v1.material.AuxiliaryMaterial material = 2;
     */
    material: AuxiliaryMaterial;
    /**
     * The message in bincode format.
     *
     * @generated from field: bytes bincode_message = 3;
     */
    bincodeMessage: Uint8Array;
};
/**
 * Describes the message nillion.preprocessing.v1.stream.AuxiliaryMaterialStreamMessage.
 * Use `create(AuxiliaryMaterialStreamMessageSchema)` to create a new message.
 */
export declare const AuxiliaryMaterialStreamMessageSchema: GenMessage<AuxiliaryMaterialStreamMessage>;
