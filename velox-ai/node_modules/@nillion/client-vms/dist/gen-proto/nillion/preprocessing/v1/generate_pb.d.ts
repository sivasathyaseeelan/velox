import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { PreprocessingElement } from "./element_pb";
import type { AuxiliaryMaterial } from "./material_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/preprocessing/v1/generate.proto.
 */
export declare const file_nillion_preprocessing_v1_generate: GenFile;
/**
 * A request to generate preprocessing material.
 *
 * @generated from message nillion.preprocessing.v1.generate.GeneratePreprocessingRequest
 */
export type GeneratePreprocessingRequest = Message<"nillion.preprocessing.v1.generate.GeneratePreprocessingRequest"> & {
    /**
     * An identifier for this generation instance.
     *
     * @generated from field: bytes generation_id = 1;
     */
    generationId: Uint8Array;
    /**
     * The batch id that is being generated.
     *
     * This is a sequential number per preprocessing element.
     *
     * @generated from field: uint64 batch_id = 2;
     */
    batchId: bigint;
    /**
     * The number of elements being generated.
     *
     * @generated from field: uint32 batch_size = 3;
     */
    batchSize: number;
    /**
     * The preprocessing element being generated.
     *
     * @generated from field: nillion.preprocessing.v1.element.PreprocessingElement element = 4;
     */
    element: PreprocessingElement;
};
/**
 * Describes the message nillion.preprocessing.v1.generate.GeneratePreprocessingRequest.
 * Use `create(GeneratePreprocessingRequestSchema)` to create a new message.
 */
export declare const GeneratePreprocessingRequestSchema: GenMessage<GeneratePreprocessingRequest>;
/**
 * A response to a request to generate preprocessing material.
 *
 * @generated from message nillion.preprocessing.v1.generate.GeneratePreprocessingResponse
 */
export type GeneratePreprocessingResponse = Message<"nillion.preprocessing.v1.generate.GeneratePreprocessingResponse"> & {
    /**
     * The status of the preprocessing protocol.
     *
     * @generated from field: nillion.preprocessing.v1.generate.PreprocessingProtocolStatus status = 1;
     */
    status: PreprocessingProtocolStatus;
};
/**
 * Describes the message nillion.preprocessing.v1.generate.GeneratePreprocessingResponse.
 * Use `create(GeneratePreprocessingResponseSchema)` to create a new message.
 */
export declare const GeneratePreprocessingResponseSchema: GenMessage<GeneratePreprocessingResponse>;
/**
 * / A request to generate auxiliary material.
 *
 * @generated from message nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialRequest
 */
export type GenerateAuxiliaryMaterialRequest = Message<"nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialRequest"> & {
    /**
     * / An identifier for this generation instance.
     *
     * @generated from field: bytes generation_id = 1;
     */
    generationId: Uint8Array;
    /**
     * The material we want to generate.
     *
     * @generated from field: nillion.preprocessing.v1.material.AuxiliaryMaterial material = 2;
     */
    material: AuxiliaryMaterial;
};
/**
 * Describes the message nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialRequest.
 * Use `create(GenerateAuxiliaryMaterialRequestSchema)` to create a new message.
 */
export declare const GenerateAuxiliaryMaterialRequestSchema: GenMessage<GenerateAuxiliaryMaterialRequest>;
/**
 * / A response to a request to generate auxiliary material.
 *
 * @generated from message nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialResponse
 */
export type GenerateAuxiliaryMaterialResponse = Message<"nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialResponse"> & {
    /**
     * The status of the generation protocol.
     *
     * @generated from field: nillion.preprocessing.v1.generate.PreprocessingProtocolStatus status = 1;
     */
    status: PreprocessingProtocolStatus;
};
/**
 * Describes the message nillion.preprocessing.v1.generate.GenerateAuxiliaryMaterialResponse.
 * Use `create(GenerateAuxiliaryMaterialResponseSchema)` to create a new message.
 */
export declare const GenerateAuxiliaryMaterialResponseSchema: GenMessage<GenerateAuxiliaryMaterialResponse>;
/**
 * The status of a preprocessing protocol execution.
 *
 * @generated from enum nillion.preprocessing.v1.generate.PreprocessingProtocolStatus
 */
export declare enum PreprocessingProtocolStatus {
    /**
     * The protocol is waiting for peer initialization.
     *
     * @generated from enum value: WAITING_PEERS = 0;
     */
    WAITING_PEERS = 0,
    /**
     * The protocol finished successfully.
     *
     * @generated from enum value: FINISHED_SUCCESS = 1;
     */
    FINISHED_SUCCESS = 1,
    /**
     * The protocol finished with an error.
     *
     * @generated from enum value: FINISHED_FAILURE = 2;
     */
    FINISHED_FAILURE = 2
}
/**
 * Describes the enum nillion.preprocessing.v1.generate.PreprocessingProtocolStatus.
 */
export declare const PreprocessingProtocolStatusSchema: GenEnum<PreprocessingProtocolStatus>;
