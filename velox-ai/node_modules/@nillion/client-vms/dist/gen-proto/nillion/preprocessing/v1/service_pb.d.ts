import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import type { GenerateAuxiliaryMaterialRequestSchema, GenerateAuxiliaryMaterialResponseSchema, GeneratePreprocessingRequestSchema, GeneratePreprocessingResponseSchema } from "./generate_pb";
import type { AuxiliaryMaterialStreamMessageSchema, PreprocessingStreamMessageSchema } from "./stream_pb";
import type { CleanupUsedElementsRequestSchema } from "./cleanup_pb";
/**
 * Describes the file nillion/preprocessing/v1/service.proto.
 */
export declare const file_nillion_preprocessing_v1_service: GenFile;
/**
 * A service to run preprocessing related actions.
 *
 * @generated from service nillion.preprocessing.v1.Preprocessing
 */
export declare const Preprocessing: GenService<{
    /**
     * Trigger the generation of preprocessing material.
     *
     * Preprocessing material is used to speed up the online phase for certain operations in MPC programs.
     *
     * @generated from rpc nillion.preprocessing.v1.Preprocessing.GeneratePreprocessing
     */
    generatePreprocessing: {
        methodKind: "server_streaming";
        input: typeof GeneratePreprocessingRequestSchema;
        output: typeof GeneratePreprocessingResponseSchema;
    };
    /**
     * Trigger the generation of auxiliary material.
     *
     * The distinction between preprocessing and auxiliary material is preprocessing is consumed when certain
     * programs are ran while auxiliary material is generated once when the network starts for the first time and
     * is never consumed unless there's a reason to regenerate it.
     *
     * @generated from rpc nillion.preprocessing.v1.Preprocessing.GenerateAuxiliaryMaterial
     */
    generateAuxiliaryMaterial: {
        methodKind: "server_streaming";
        input: typeof GenerateAuxiliaryMaterialRequestSchema;
        output: typeof GenerateAuxiliaryMaterialResponseSchema;
    };
    /**
     * Open a stream to generate a preprocessing element.
     *
     * @generated from rpc nillion.preprocessing.v1.Preprocessing.StreamPreprocessing
     */
    streamPreprocessing: {
        methodKind: "client_streaming";
        input: typeof PreprocessingStreamMessageSchema;
        output: typeof EmptySchema;
    };
    /**
     * Open a stream to generate auxiliary material.
     *
     * @generated from rpc nillion.preprocessing.v1.Preprocessing.StreamAuxiliaryMaterial
     */
    streamAuxiliaryMaterial: {
        methodKind: "client_streaming";
        input: typeof AuxiliaryMaterialStreamMessageSchema;
        output: typeof EmptySchema;
    };
    /**
     * Cleanup used preprocessing chunks.
     *
     * @generated from rpc nillion.preprocessing.v1.Preprocessing.CleanupUsedElements
     */
    cleanupUsedElements: {
        methodKind: "unary";
        input: typeof CleanupUsedElementsRequestSchema;
        output: typeof EmptySchema;
    };
}>;
