import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Empty, Timestamp } from "@bufbuild/protobuf/wkt";
import type { InvokeCompute, OverwritePermissions, RetrievePermissions, RetrieveValues, SignedQuote, StoreProgram, StoreValues, UpdatePermissions } from "./quote_pb";
import type { PreprocessingElement } from "../../preprocessing/v1/element_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/payments/v1/receipt.proto.
 */
export declare const file_nillion_payments_v1_receipt: GenFile;
/**
 * A request to get a payment receipt for a paid operation.
 *
 * @generated from message nillion.payments.v1.receipt.PaymentReceiptRequest
 */
export type PaymentReceiptRequest = Message<"nillion.payments.v1.receipt.PaymentReceiptRequest"> & {
    /**
     * The quote that the user paid for.
     *
     * @generated from field: nillion.payments.v1.quote.SignedQuote signed_quote = 1;
     */
    signedQuote?: SignedQuote;
    /**
     * The nilchain transaction hash that proves this payment was made.
     *
     * @generated from field: string tx_hash = 2;
     */
    txHash: string;
};
/**
 * Describes the message nillion.payments.v1.receipt.PaymentReceiptRequest.
 * Use `create(PaymentReceiptRequestSchema)` to create a new message.
 */
export declare const PaymentReceiptRequestSchema: GenMessage<PaymentReceiptRequest>;
/**
 * A signed receipt that indicates the user paid.
 *
 * @generated from message nillion.payments.v1.receipt.SignedReceipt
 */
export type SignedReceipt = Message<"nillion.payments.v1.receipt.SignedReceipt"> & {
    /**
     * The serialized `Receipt`.
     *
     * @generated from field: bytes receipt = 1;
     */
    receipt: Uint8Array;
    /**
     * The signature for this receipt.
     *
     * @generated from field: bytes signature = 2;
     */
    signature: Uint8Array;
};
/**
 * Describes the message nillion.payments.v1.receipt.SignedReceipt.
 * Use `create(SignedReceiptSchema)` to create a new message.
 */
export declare const SignedReceiptSchema: GenMessage<SignedReceipt>;
/**
 * A receipt for an operation that the user paid for.
 *
 * @generated from message nillion.payments.v1.receipt.Receipt
 */
export type Receipt = Message<"nillion.payments.v1.receipt.Receipt"> & {
    /**
     * A unique identifier for this operation.
     *
     * This allows nodes to independently identify this operation and ensure no receipt is used more than once.
     *
     * @generated from field: bytes identifier = 1;
     */
    identifier: Uint8Array;
    /**
     * The metadata for this receipt;
     *
     * @generated from field: nillion.payments.v1.receipt.OperationMetadata metadata = 2;
     */
    metadata?: OperationMetadata;
    /**
     * The point in time at which this receipt expires and can no longer be used to invoke the associated
     * operation in the network.
     *
     * @generated from field: google.protobuf.Timestamp expires_at = 3;
     */
    expiresAt?: Timestamp;
};
/**
 * Describes the message nillion.payments.v1.receipt.Receipt.
 * Use `create(ReceiptSchema)` to create a new message.
 */
export declare const ReceiptSchema: GenMessage<Receipt>;
/**
 * The metadata associated with the operation this receipt is for.
 *
 * @generated from message nillion.payments.v1.receipt.OperationMetadata
 */
export type OperationMetadata = Message<"nillion.payments.v1.receipt.OperationMetadata"> & {
    /**
     * @generated from oneof nillion.payments.v1.receipt.OperationMetadata.operation
     */
    operation: {
        /**
         * A preprocessing pool status operation.
         *
         * @generated from field: google.protobuf.Empty pool_status = 1;
         */
        value: Empty;
        case: "poolStatus";
    } | {
        /**
         * A store program operation.
         *
         * @generated from field: nillion.payments.v1.quote.StoreProgram store_program = 2;
         */
        value: StoreProgram;
        case: "storeProgram";
    } | {
        /**
         * A retrieve values operation.
         *
         * @generated from field: nillion.payments.v1.quote.RetrieveValues retrieve_values = 3;
         */
        value: RetrieveValues;
        case: "retrieveValues";
    } | {
        /**
         * A retrieve permissions operation.
         *
         * @generated from field: nillion.payments.v1.quote.RetrievePermissions retrieve_permissions = 4;
         */
        value: RetrievePermissions;
        case: "retrievePermissions";
    } | {
        /**
         * A store values operation.
         *
         * @generated from field: nillion.payments.v1.quote.StoreValues store_values = 5;
         */
        value: StoreValues;
        case: "storeValues";
    } | {
        /**
         * An invoke compute operation.
         *
         * @generated from field: nillion.payments.v1.receipt.InvokeComputeMetadata invoke_compute = 6;
         */
        value: InvokeComputeMetadata;
        case: "invokeCompute";
    } | {
        /**
         * An overwrite permissions operation.
         *
         * @generated from field: nillion.payments.v1.quote.OverwritePermissions overwrite_permissions = 7;
         */
        value: OverwritePermissions;
        case: "overwritePermissions";
    } | {
        /**
         * An update permissions operation.
         *
         * @generated from field: nillion.payments.v1.quote.UpdatePermissions update_permissions = 8;
         */
        value: UpdatePermissions;
        case: "updatePermissions";
    } | {
        case: undefined;
        value?: undefined;
    };
};
/**
 * Describes the message nillion.payments.v1.receipt.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export declare const OperationMetadataSchema: GenMessage<OperationMetadata>;
/**
 * The metadata for an invoke compute operation.
 *
 * @generated from message nillion.payments.v1.receipt.InvokeComputeMetadata
 */
export type InvokeComputeMetadata = Message<"nillion.payments.v1.receipt.InvokeComputeMetadata"> & {
    /**
     * The invoke compute quote.
     *
     * @generated from field: nillion.payments.v1.quote.InvokeCompute quote = 1;
     */
    quote?: InvokeCompute;
    /**
     * The selected preprocessing offsets for this operation.
     *
     * @generated from field: repeated nillion.payments.v1.receipt.SelectedPreprocessingOffsets offsets = 2;
     */
    offsets: SelectedPreprocessingOffsets[];
};
/**
 * Describes the message nillion.payments.v1.receipt.InvokeComputeMetadata.
 * Use `create(InvokeComputeMetadataSchema)` to create a new message.
 */
export declare const InvokeComputeMetadataSchema: GenMessage<InvokeComputeMetadata>;
/**
 * The selected offsets for a preprocessing element.
 *
 * This is closed-open set, e.g. [start, end)
 *
 * @generated from message nillion.payments.v1.receipt.SelectedPreprocessingOffsets
 */
export type SelectedPreprocessingOffsets = Message<"nillion.payments.v1.receipt.SelectedPreprocessingOffsets"> & {
    /**
     * The preprocessing element.
     *
     * @generated from field: nillion.preprocessing.v1.element.PreprocessingElement element = 1;
     */
    element: PreprocessingElement;
    /**
     * The first offset in the range.
     *
     * @generated from field: uint64 start = 2;
     */
    start: bigint;
    /**
     * The one-past-the-end offset in this range.
     *
     * @generated from field: uint64 end = 3;
     */
    end: bigint;
    /**
     * The size of all batches involved in the selected range.
     *
     * @generated from field: uint64 batch_size = 4;
     */
    batchSize: bigint;
};
/**
 * Describes the message nillion.payments.v1.receipt.SelectedPreprocessingOffsets.
 * Use `create(SelectedPreprocessingOffsetsSchema)` to create a new message.
 */
export declare const SelectedPreprocessingOffsetsSchema: GenMessage<SelectedPreprocessingOffsets>;
