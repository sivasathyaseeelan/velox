import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { UserId } from "../../auth/v1/user_pb";
import type { SignedReceipt } from "../../payments/v1/receipt_pb";
import type { ComputePermissions } from "./permissions_pb";
import type { Message } from "@bufbuild/protobuf";
/**
 * Describes the file nillion/permissions/v1/update.proto.
 */
export declare const file_nillion_permissions_v1_update: GenFile;
/**
 * A request to update the permissions on a set of values to another user.
 *
 * Any `revoke_*` permissions only have an effect if the user id provided already had
 * that permission before. e.g. using `revoke_retrieve` for a user id that doesn't have
 * retrieve permissions has no effect.
 *
 * @generated from message nillion.permissions.v1.update.UpdatePermissionsRequest
 */
export type UpdatePermissionsRequest = Message<"nillion.permissions.v1.update.UpdatePermissionsRequest"> & {
    /**
     * The receipt that proves this operation was paid for.
     *
     * The receipt must be for a `UpdatePermissions` operation.
     *
     * @generated from field: nillion.payments.v1.receipt.SignedReceipt signed_receipt = 1;
     */
    signedReceipt?: SignedReceipt;
    /**
     * The retrieve values permissions to be granted/revoked.
     *
     * @generated from field: nillion.permissions.v1.update.PermissionCommand retrieve = 2;
     */
    retrieve?: PermissionCommand;
    /**
     * The update values permissions to be granted/revoked.
     *
     * @generated from field: nillion.permissions.v1.update.PermissionCommand update = 3;
     */
    update?: PermissionCommand;
    /**
     * The delete values permissions to be granted/revoked.
     *
     * @generated from field: nillion.permissions.v1.update.PermissionCommand delete = 4;
     */
    delete?: PermissionCommand;
    /**
     * The compute permissions to be granted/revoked.
     *
     * @generated from field: nillion.permissions.v1.update.ComputePermissionCommand compute = 5;
     */
    compute?: ComputePermissionCommand;
};
/**
 * Describes the message nillion.permissions.v1.update.UpdatePermissionsRequest.
 * Use `create(UpdatePermissionsRequestSchema)` to create a new message.
 */
export declare const UpdatePermissionsRequestSchema: GenMessage<UpdatePermissionsRequest>;
/**
 * The set of users that are being granted/revoke permissions for an action.
 *
 * @generated from message nillion.permissions.v1.update.PermissionCommand
 */
export type PermissionCommand = Message<"nillion.permissions.v1.update.PermissionCommand"> & {
    /**
     * The list of users that we're granting permissions to.
     *
     * @generated from field: repeated nillion.auth.v1.user.UserId grant = 1;
     */
    grant: UserId[];
    /**
     * The list of users that we're revoking permissions from.
     *
     * @generated from field: repeated nillion.auth.v1.user.UserId revoke = 2;
     */
    revoke: UserId[];
};
/**
 * Describes the message nillion.permissions.v1.update.PermissionCommand.
 * Use `create(PermissionCommandSchema)` to create a new message.
 */
export declare const PermissionCommandSchema: GenMessage<PermissionCommand>;
/**
 * The set of users that are being granted/revoke permissions for compute actions.
 *
 * @generated from message nillion.permissions.v1.update.ComputePermissionCommand
 */
export type ComputePermissionCommand = Message<"nillion.permissions.v1.update.ComputePermissionCommand"> & {
    /**
     * The user ids that will be allowed to compute on the stored values.
     *
     * @generated from field: repeated nillion.permissions.v1.permissions.ComputePermissions grant = 1;
     */
    grant: ComputePermissions[];
    /**
     * The user ids that will be revoked the permission to compute the stored values.
     *
     * @generated from field: repeated nillion.permissions.v1.permissions.ComputePermissions revoke = 2;
     */
    revoke: ComputePermissions[];
};
/**
 * Describes the message nillion.permissions.v1.update.ComputePermissionCommand.
 * Use `create(ComputePermissionCommandSchema)` to create a new message.
 */
export declare const ComputePermissionCommandSchema: GenMessage<ComputePermissionCommand>;
