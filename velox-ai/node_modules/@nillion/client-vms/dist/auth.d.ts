import type { Interceptor } from "@connectrpc/connect";
import { type PublicKey } from "#/gen-proto/nillion/auth/v1/public_key_pb";
import { type SignedToken, type Token } from "#/gen-proto/nillion/auth/v1/token_pb";
import type { PartyId } from "#/types/types";
export declare const createAuthInterceptor: (auth: TokenAuthManager, node: PartyId) => Interceptor;
export declare class TokenAuthManager {
    privateKey: Uint8Array;
    publicKey: PublicKey;
    constructor(privateKey: Uint8Array);
    generateToken(id: PartyId): Token;
    signToken(token: Token): SignedToken;
    sign(data: Uint8Array): Uint8Array;
    isTokenExpired(token: Token): boolean;
    verify(signed: SignedToken): boolean;
    serialize(signed: SignedToken): string;
    deserialize(data: string): SignedToken;
    static fromSeed(seed: string): TokenAuthManager;
}
