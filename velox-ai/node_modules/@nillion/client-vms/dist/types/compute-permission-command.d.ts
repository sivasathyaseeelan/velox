import { type ComputePermissionCommand as ComputePermissionCommandProtobuf } from "#/gen-proto/nillion/permissions/v1/update_pb";
import type { ProgramId } from "#/types/types";
import type { UserId } from "#/types/user-id";
export declare class ComputePermissionCommand {
    private readonly grant;
    private readonly revoke;
    constructor(grant: Map<UserId, Set<ProgramId>>, revoke: Map<UserId, Set<ProgramId>>);
    toProto(): ComputePermissionCommandProtobuf;
}
type ComputePermissionCommandAsObject = {
    grant: Map<string, string[]>;
    revoke: Map<string, string[]>;
};
export declare class ComputePermissionCommandBuilder {
    private readonly _grant;
    private readonly _revoke;
    private constructor();
    grant(id: UserId, program: ProgramId): this;
    revoke(id: UserId, program: ProgramId): this;
    toObject(): ComputePermissionCommandAsObject;
    build(): ComputePermissionCommand;
    static init(): ComputePermissionCommandBuilder;
}
export {};
